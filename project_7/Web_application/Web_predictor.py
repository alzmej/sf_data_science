import streamlit as st 
import numpy as np
import pandas as pd
import plotly.figure_factory as ff
from sources.connect import get_data
from sources.predict import predict_MEE, predict_EKMP, predict_all
from sources.converter import df_predict_encoder
from sources.functions import to_excel

st.set_page_config(page_title="–ü–æ–∏—Å–∫ –¥–µ—Ñ–µ–∫—Ç–æ–≤ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –ø–æ–º–æ—â–∏", page_icon="üìä")
st.markdown(
    """
    –î–ª—è –æ—Ü–µ–Ω–∫–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –¥–µ—Ñ–µ–∫—Ç–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –ø–æ–º–æ—â–∏
    –ø–æ —Ä–µ–µ—Å—Ç—Ä–∞–º —Å—á–µ—Ç–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç–±–æ—Ä–∞ —Å–ª—É—á–∞–µ–≤ 
    –∏ –ø–æ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º—É —Å–ø–∏—Å–∫—É –ø—Ä–æ–≤–µ—Å—Ç–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ. –†–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç 
    –≤—ã–≤–µ–¥–µ–Ω –Ω–∞ —ç–∫—Ä–∞–Ω –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã –ø–µ—Ä–µ—á–Ω—è —Å–ª—É—á–∞–µ–≤ —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 
    –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã –ú–≠–≠ –∏ –≠–ö–ú–ü –∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 
    —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –¥–µ—Ñ–µ–∫—Ç–∞. –†–µ–∑—É–ª—å—Ç–∞—Ç –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ñ–∞–π–ª 
    —Ñ–æ—Ä–º–∞—Ç–∞ *.xlsx .
""")
predict_df = pd.DataFrame()
st.title('–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –¥–µ—Ñ–µ–∫—Ç–æ–≤ —Å–ª—É—á–∞–µ–≤ –º–µ–¥–ø–æ–º–æ—â–∏')

with st.sidebar:
    med_test_radio = st.radio(
                            "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ –æ—Ç–±–æ—Ä–∞",
                            ["–ì–æ–¥ + –º–µ—Å—è—Ü", "–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –ú–û", "–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –°–ú–û",
                             "–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –ú–û + –∫–æ–¥ –°–ú–û", "–ì–æ–¥ + –º–µ—Å—è—Ü + –§–ò–û + –î–†",
                             "–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –ú–û + –§–ò–û + –î–†", "–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –°–ú–û + –§–ò–û + –î–†", 
                             "–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –°–ú–û + –∫–æ–¥ –ú–û + –§–ò–û + –î–†", "–ì–æ–¥ + –º–µ—Å—è—Ü + –ï–ù–ü",
                             "–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –ú–û + –ï–ù–ü", "–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –°–ú–û + –ï–ù–ü", 
                             "–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –°–ú–û + –∫–æ–¥ –ú–û + –ï–ù–ü"                        
                             ],
                        )
    st.write("–í—ã–±—Ä–∞–Ω–∞ –≤–∏–¥ –æ—Ç–±–æ—Ä–∞:", med_test_radio)
    expertis_radio = st.radio('–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã',
                              ['MEE', 'EKMP', '–í—Å—ë'],
                              )
    year_radio = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç—á—ë—Ç–Ω—ã–π –≥–æ–¥",
                          ['2023', '2024'],
                         )   
    month_radio = st.radio(
                            "–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç—á—ë—Ç–Ω—ã–π –º–µ—Å—è—Ü",
                            ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],
                        )
    SMO_radio = st.radio(
                            "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–¥ –°–ú–û",
                            ['83001', '83005', '83008'],
                        )
    
    st.write("–í—ã–±—Ä–∞–Ω –º–µ—Å—è—Ü ", month_radio, ' –≥–æ–¥ ', year_radio)

if ((med_test_radio == "–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –ú–û") or (med_test_radio == "–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –ú–û + –∫–æ–¥ –°–ú–û") or (med_test_radio == "–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –ú–û + –§–ò–û + –î–†") 
    or (med_test_radio == "–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –°–ú–û + –∫–æ–¥ –ú–û + –§–ò–û + –î–†") or (med_test_radio == "–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –ú–û + –ï–ù–ü") or (med_test_radio == "–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –°–ú–û + –∫–æ–¥ –ú–û + –ï–ù–ü")):
    MO_code = st.text_input("–í–≤–µ–¥–∏—Ç–µ MO –∫–æ–¥")
  
if ((med_test_radio == "–ì–æ–¥ + –º–µ—Å—è—Ü + –§–ò–û + –î–†") or (med_test_radio == "–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –°–ú–û + –§–ò–û + –î–†") 
    or (med_test_radio == "–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –ú–û + –§–ò–û + –î–†") or (med_test_radio == "–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –°–ú–û + –∫–æ–¥ –ú–û + –§–ò–û + –î–†")):
    FAM = st.text_input("–í–≤–µ–¥–∏—Ç–µ –§–∞–º–∏–ª–∏—é")  
    IM = st.text_input("–í–≤–µ–¥–∏—Ç–µ –ò–º—è")
    OT = st.text_input("–í–≤–µ–¥–∏—Ç–µ –û—Ç—á–µ—Å—Ç–≤–æ")
    DR = st.date_input("–í–≤–µ–¥–∏—Ç–µ –î–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è")
    
if ((med_test_radio == "–ì–æ–¥ + –º–µ—Å—è—Ü + –ï–ù–ü") or (med_test_radio == "–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –ú–û + –ï–ù–ü") or (med_test_radio == "–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –°–ú–û + –ï–ù–ü") 
    or (med_test_radio == "–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –°–ú–û + –∫–æ–¥ –ú–û + –ï–ù–ü")):
    ENP = st.text_input("–í–≤–µ–¥–∏—Ç–µ ENP")
    
if med_test_radio =='–ì–æ–¥ + –º–µ—Å—è—Ü':
    argument=str('and s.YEAR = '+ year_radio +' and s.MONTH = '+ month_radio)
elif med_test_radio =="–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –°–ú–û":
    argument=str('and s.YEAR = '+ str(year_radio) +' and s.MONTH = '+ str(month_radio) +' and s.PLAT = ' + '\'' + str(SMO_radio) + '\'')
elif med_test_radio =="–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –ú–û":    
    argument=str('and s.YEAR = '+ str(year_radio) +' and s.MONTH = '+ str(month_radio) +' and s.CODE_MO = ' + '\'' + str(MO_code) + '\'')
elif med_test_radio =="–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –ú–û + –∫–æ–¥ –°–ú–û":
    argument=str('and s.YEAR = '+ str(year_radio) +' and s.MONTH = '+ str(month_radio) +' and s.PLAT = ' + '\'' + str(SMO_radio) + '\''+' and s.CODE_MO = ' + '\'' + str(MO_code) + '\'')    
elif med_test_radio =="–ì–æ–¥ + –º–µ—Å—è—Ü + –§–ò–û + –î–†":
    argument=str('and s.YEAR = '+ str(year_radio) +' and s.MONTH = '+ str(month_radio) +' and sz.FAM = '+ '\'' + str(FAM) + '\'' +' and sz.IM = '+ '\''+ str(IM) + '\''+' and sz.OT = '+ '\''+ str(OT) + '\'' + ' and sz.DR = '+ '\''+ str(DR) + '\'')    
elif med_test_radio =="–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –ú–û + –§–ò–û + –î–†":
    argument=str('and s.YEAR = '+ str(year_radio) +' and s.MONTH = '+ str(month_radio) +' and s.CODE_MO = ' + '\'' + str(MO_code) + '\'' +' and sz.FAM = '+ '\'' + FAM + '\'' +' and sz.IM = '+ '\''+ IM + '\''+' and sz.OT = '+ '\''+ OT + '\'' + ' and sz.DR = '+ '\''+ DR + '\'')
elif med_test_radio =="–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –°–ú–û + –§–ò–û + –î–†":
    argument=str('and s.YEAR = '+ str(year_radio) +' and s.MONTH = '+ str(month_radio) +' and s.PLAT = ' + '\'' + str(SMO_radio) + '\'' +' and sz.FAM = '+ '\'' + FAM + '\'' +' and sz.IM = '+ '\''+ IM + '\''+' and sz.OT = '+ '\''+ OT + '\'' + ' and sz.DR = '+ '\''+ DR + '\'')
elif med_test_radio =="–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –°–ú–û + –∫–æ–¥ –ú–û + –§–ò–û + –î–†":
    argument=str('and s.YEAR = '+ str(year_radio) +' and s.MONTH = '+ str(month_radio) +' and s.CODE_MO = ' + '\'' + str(MO_code) + '\'' +' and s.PLAT = ' + '\'' + str(SMO_radio) + '\'' +' and sz.FAM = '+ '\'' + FAM + '\'' +' and sz.IM = '+ '\''+ IM + '\''+' and sz.OT = '+ '\''+ OT + '\'' + ' and sz.DR = '+ '\''+ DR + '\'')
elif med_test_radio =="–ì–æ–¥ + –º–µ—Å—è—Ü + –ï–ù–ü":
    argument=str('and s.YEAR = '+ str(year_radio) +' and s.MONTH = '+ str(month_radio) +' and sz.ENP = ' + '\'' + str(ENP) + '\'')
elif med_test_radio =="–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –ú–û + –ï–ù–ü":
    argument=str('and s.YEAR = '+ str(year_radio) +' and s.MONTH = '+ str(month_radio) +' and s.CODE_MO = ' + '\'' + str(MO_code) + '\'' + ' and sz.ENP = ' + '\'' + str(ENP) + '\'')
elif med_test_radio =="–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –°–ú–û + –ï–ù–ü":
    argument=str('and s.YEAR = '+ str(year_radio) +' and s.MONTH = '+ str(month_radio) +' and s.PLAT = ' + '\'' + str(SMO_radio) + '\'' + ' and sz.ENP = ' + '\'' + str(ENP) + '\'')
elif med_test_radio =="–ì–æ–¥ + –º–µ—Å—è—Ü + –∫–æ–¥ –°–ú–û + –∫–æ–¥ –ú–û + –ï–ù–ü":
    argument=str('and s.YEAR = '+ str(year_radio) +' and s.MONTH = '+ str(month_radio) +' and s.CODE_MO = ' + '\'' + str(MO_code) + '\'' + ' and s.PLAT = ' + '\'' + str(SMO_radio) + '\'' + ' and sz.ENP = ' + '\'' + str(ENP) + '\'')

if st.button('–†–∞—Å—á—ë—Ç'):   
    df = get_data(argument)  
    temp_sluch_df = df[['UUID','ENP','FAM','IM','OT','BIRTHDAY','SMO','MO','VIDPOM','USL_OK','FOR_POM','PROFIL','DS1','NHISTORY','DATE_1','DATE_2','SUMV']]
    st.write('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã')
    st.write(df)    
    data_MEE, data_EKMP = df_predict_encoder(df)
    if expertis_radio=='MEE':
        predict_df = predict_MEE(data_MEE, temp_sluch_df)
        st.write('–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ')
        st.write(predict_df)
    elif expertis_radio=='EKMP':
        predict_df = predict_EKMP(data_EKMP, temp_sluch_df)
        st.write('–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ')
        st.write(predict_df)
    else:
        predict_df = predict_all(data_MEE, data_EKMP, temp_sluch_df)
        st.write('–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ')
        st.write(predict_df)
    
else:
    st.write('–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –Ω–∞–∂–º–∏—Ç–µ "–†–∞—Å—á—ë—Ç"')
    

df_xls = to_excel(predict_df)
st.download_button(label='üì• –°–æ—Ö—Ä–∞–Ω–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç',
                                data=df_xls ,
                                file_name= 'df_test.xlsx')